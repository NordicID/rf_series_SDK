#if !defined(AFX_PLSERVER_H__0FE467C5_6AF3_4A18_B8A9_F205D83A645B__INCLUDED_)
#define AFX_PLSERVER_H__0FE467C5_6AF3_4A18_B8A9_F205D83A645B__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CPLServer wrapper class

class CPLServer : public CWnd
{
protected:
	DECLARE_DYNCREATE(CPLServer)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x244758c6, 0xa002, 0x11d2, { 0xb8, 0x2b, 0x93, 0x8d, 0xae, 0xcf, 0xce, 0x37 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	short GetBoxPerRow();
	void SetBoxPerRow(short);
	BOOL GetNotify();
	void SetNotify(BOOL);

// Operations
public:
	BOOL Ack(long id);
	BOOL Bell(long id);
	BOOL Button(long id, short pos, LPCTSTR txt);
	BOOL ClearCmd(long id, short cmd, short start, short stop);
	void ClearSendBuffer(long id);
	BOOL CmdSet(long id, short* commands, short length);
	BOOL Connect(short com_port);
	BOOL FieldCmd(long id, short pos, short fcmd);
	BOOL FldTxt(long id, short pos, LPCTSTR txt);
	CString GetData(long id, short pos);
	short GetExtraID(long id);
	short GetLastFrameID(long id);
	short GetRSSI(long id);
	BOOL IsData(long id, short pos);
	BOOL NewField(long id, short pos, short length, short style);
	BOOL PopMessage(long id, short pos, LPCTSTR txt);
	BOOL Send(long id, short frameid);
	BOOL SetView(long id, short row);
	BOOL Text(long id, short pos, LPCTSTR txt);
	BOOL What(long id, short delay);
	void DataIn(short* data, short data_len, short source_addr);
	BOOL ClearForm(long id);
	BOOL StartServer(short port);
	void StopServer();
	BOOL DataToSerial(long id, LPCTSTR txt);
	BOOL WaitSerial(long id, short delay);
	void DisconnectSerialServer(short ssID);
	short ConnectToSerialServer(LPCTSTR addr, short port);
	BOOL NewFieldEx(long id, short pos, short length, short style);
	BOOL Receiver(long id, short mode);
	BOOL IsReceiver(long id);
	BOOL SendMsg(long receiverID, long senderID, short frameid, short resendTimes);
	short GetFormID(long id);
	BOOL SetFormID(long id, short formID);
	BOOL IsLastAnswerToHsOk(long id);
	short GetMessageNumber(long id);
	CString GetHsIdString(long id);
	short GetSerialData(long id, short* serdata);
	short GetReceiveBuffer(long id, short* data);
	void SetBSCollectDelay(short msDelay);
	BOOL Beep(long id, short length, short delay);
	void SendSSMAck(short ssmID);
	BOOL SendSSMData(long ssmID, short msgNum, short* data, short length, short retries);
	short WaitSSMData(short ssmID, short* ssmData, short ms_waitTime);
	short GetBatteryLevel(long id);
	BOOL RFIDField(long id, short pos, short length, short style, short first_page, short last_page);
	short RFIDReadPages(long id, short firstPage, short lastPage, short* dataBuffer, short msWait);
	short SendWaitRFIDEngineData(long id, short len, short* dataBuffer, short msWait);
	BOOL SpecialCmd(long id, short type, long data);
	short GetSpecialData(long id, short type);
	BOOL RedirSSMtoNetworkAdapter(long ssmID, short sessionID);
	short GetStatus(long id);
	BOOL WaitReceiverAck(long id);
	short GetLogItemCount();
	BOOL GetLogItem(short ind, long* logStruct);
	void SetLog(short mode, short eventBetweenXitems);
	BOOL StartDataInLog(LPCTSTR logFile);
	void StopDataInLog();
	BOOL StartMsgLog(LPCTSTR msgLogFile);
	void StopMsgLog();
	short SendWaitRFIDEngineDataEx(long id, short len, long* dataBuffer, short msWait);
	BOOL SetText(long id, short pos, LPCTSTR txt);
	short GetSerialSvrStatus(short connID);
	long GetCRCValue(long id);
	BOOL TextEx(long id, short pos, LPCTSTR txt);
	CString GetSourceIPAddr(long id);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_PLSERVER_H__0FE467C5_6AF3_4A18_B8A9_F205D83A645B__INCLUDED_)
